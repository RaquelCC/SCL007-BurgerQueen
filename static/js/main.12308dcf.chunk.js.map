{"version":3,"sources":["components/foodButtons.js","components/currentOrder.js","components/returnButton.js","components/firebase.js","components/waiters.js","components/menuButtons.js","components/kitchen.js","App.js","serviceWorker.js","index.js","img/output-onlinepngtools.png"],"names":["FoodButton","props","react_default","a","createElement","key","value","className","onClick","price","toUpperCase","CurrentOrder","orderList","currentOrder","contents","map","foodItem","itemName","quantity","removeItem","concat","customer","total","components_foodButtons","sendToKitchen","order","ReturnButton","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","pedidosRef","ref","Waiters","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","menu","displayMenu","keys","previousMenu","currentMenu","sentToKitchen","ready","inputName","returnMenu","bind","assertThisInitialized","handleClick","renderDisplayMenu","handleChange","addCustomer","length","newPrevious","newCurrent","pop","setState","objectSpread","item","precio","newContent","i","push","newDisplay","_this2","Date","now","_this3","e","target","newContents","filter","menuItem","newItem","returnButton","id","placeholder","onChange","Component","MenuButton","waitersOn","Kitchen","kitchenOrders","App","orders","on","snap","val","menuButtons","src","logo","alt","renderMenuButton","components_waiters","components_kitchen","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.12308dcf.chunk.js","sourcesContent":["import React from 'react';\r\nimport './foodButtons.css'\r\n\r\nfunction FoodButton(props) {\r\n    return (\r\n      <button key={props.value} className=\"food-menu\" onClick={props.onClick}>\r\n      {props.price ? props.value.toUpperCase() + \" $\" + props.price : props.value.toUpperCase()}\r\n      </button>\r\n    )\r\n  }\r\n\r\nexport default FoodButton;","import React from 'react';\r\nimport FoodButton from './foodButtons';\r\n\r\n\r\n\r\n\r\nfunction CurrentOrder(props) {\r\n    let orderList;\r\n    if (props.currentOrder.contents) {\r\n        orderList = props.currentOrder.contents.map(foodItem => {\r\n            return (\r\n                <tr key={foodItem.itemName}>\r\n                    <td>{foodItem.quantity}</td>\r\n                    <td>{foodItem.itemName}</td>\r\n                    <td>{foodItem.quantity * foodItem.price}</td>\r\n                    <td><button onClick={() => props.removeItem(foodItem.itemName)}>Eliminar</button></td>\r\n                </tr>\r\n            )\r\n        })\r\n\r\n    }\r\n\r\n    \r\n    \r\n\r\n    return (\r\n        <div className=\"current-client-name\">\r\n            <table>\r\n                <tr>\r\n                    <th></th>\r\n                    <th>{`Tomando el pedido de: ${props.currentOrder.customer}`}</th>\r\n                    <th></th>\r\n                </tr>\r\n                {orderList ? orderList : null}\r\n                <tr>\r\n                    <td></td>\r\n                    <td>Total:</td>\r\n                    <td>{props.currentOrder.total}</td>\r\n                </tr>\r\n            </table>\r\n            <FoodButton\r\n                value=\"ENVIAR A COCINA\"\r\n                onClick={()=> props.sendToKitchen(props.currentOrder)}\r\n                order={props.currentOrder}\r\n            />\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default CurrentOrder;","import React from 'react';\r\n\r\nfunction ReturnButton(props) {\r\n    return (\r\n        <button className=\"food-menu\" onClick={props.onClick}>VOLVER</button>\r\n    )\r\n}\r\n\r\nexport default ReturnButton;","import * as firebase from 'firebase';\r\n\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyALTdVlH8chi4b9C_5Y0xh2kisidpWZvl0\",\r\n    authDomain: \"burger-queen-53b76.firebaseapp.com\",\r\n    databaseURL: \"https://burger-queen-53b76.firebaseio.com\",\r\n    projectId: \"burger-queen-53b76\",\r\n    storageBucket: \"burger-queen-53b76.appspot.com\",\r\n    messagingSenderId: \"358952571365\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const pedidosRef = firebase.database().ref();\r\n","import React, { Component } from 'react';\r\nimport FoodButton from './foodButtons';\r\nimport CurrentOrder from './currentOrder';\r\nimport ReturnButton from './returnButton';\r\nimport { pedidosRef } from './firebase';\r\nimport './waiters.css'\r\n\r\nclass Waiters extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            menu: props.menu,\r\n            displayMenu: Object.keys(props.menu),\r\n            previousMenu: [(props.menu)],\r\n            currentMenu: props.menu,\r\n            currentOrder: {\r\n                customer: null,\r\n                contents: [],\r\n                total: 0,\r\n                sentToKitchen: false,\r\n                ready: false,\r\n            },\r\n            inputName: ''\r\n        }\r\n        this.returnMenu = this.returnMenu.bind(this);\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.renderDisplayMenu = this.renderDisplayMenu.bind(this);\r\n        this.sendToKitchen = this.sendToKitchen.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.addCustomer = this.addCustomer.bind(this);\r\n        this.removeItem = this.removeItem.bind(this);\r\n    }\r\n\r\n    returnMenu() {\r\n        if (this.state.previousMenu.length === 0) {\r\n            return;\r\n        }\r\n        let newPrevious = this.state.previousMenu;\r\n        let newCurrent = newPrevious.pop();\r\n        this.setState({\r\n            ...this.state,\r\n            displayMenu: Object.keys(newCurrent),\r\n            currentMenu: newCurrent,\r\n            previousMenu: newPrevious,\r\n        })\r\n    }\r\n\r\n    handleClick(item) {\r\n        if (!this.state.currentMenu[item].precio) {\r\n            const previousMenu = this.state.previousMenu;\r\n            const newPrevious = previousMenu.concat([this.state.currentMenu]);\r\n            const newDisplay = Object.keys(newPrevious[newPrevious.length - 1][item])\r\n            this.setState({\r\n                ...this.state,\r\n                previousMenu: newPrevious,\r\n                currentMenu: newPrevious[newPrevious.length - 1][item],\r\n                displayMenu: newDisplay,\r\n            })\r\n        } else {\r\n            const newContent = this.state.currentOrder.contents;\r\n            for (let i = 0; i < newContent.length; i += 1) {\r\n                if (newContent[i].itemName === item) {\r\n                    newContent[i].quantity += 1;\r\n                    this.setState({\r\n                        ...this.state,\r\n                        currentOrder: {\r\n                            ...this.state.currentOrder,\r\n                            contents: newContent,\r\n                            total: this.state.currentOrder.total + this.state.currentMenu[item].precio,\r\n                        }\r\n                    })\r\n                    return;\r\n                }\r\n            }\r\n            newContent.push({\r\n                itemName: item,\r\n                price: this.state.currentMenu[item].precio,\r\n                quantity: 1\r\n            });\r\n            this.setState({\r\n                ...this.state,\r\n                currentOrder: {\r\n                    ...this.state.currentOrder,\r\n                    contents: newContent,\r\n                    total: this.state.currentOrder.total + this.state.currentMenu[item].precio,\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    sendToKitchen() {\r\n        this.setState({\r\n            ...this.state,\r\n            currentOrder: {\r\n                ...this.state.currentOrder,\r\n                sentToKitchen: Date.now(),\r\n            }\r\n        }, () => {\r\n            pedidosRef.push(this.state.currentOrder, () => {\r\n                this.setState({\r\n                    ...this.state,\r\n                    currentOrder: {\r\n                        customer: null,\r\n                        contents: [],\r\n                        total: 0,\r\n                        sentToKitchen: false,\r\n                        ready: false,\r\n                    }\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    renderDisplayMenu() {\r\n        return (\r\n            this.state.displayMenu.map(item => {\r\n                if (item === \"precio\") {\r\n                    return null\r\n                } else {\r\n                    return (\r\n                        <FoodButton\r\n                            price={this.state.currentMenu[item].precio ? this.state.currentMenu[item].precio : null}\r\n                            key={item}\r\n                            value={item}\r\n                            onClick={() => this.handleClick(item)}\r\n                        />\r\n                    )\r\n                }\r\n            })\r\n        )\r\n    }\r\n\r\n    addCustomer() {\r\n        this.setState({\r\n            ...this.state,\r\n            inputName: \"\",\r\n            currentOrder: {\r\n                ...this.state.currentOrder,\r\n                customer: this.state.inputName,\r\n            }\r\n        })\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({\r\n            ...this.state,\r\n            inputName: e.target.value,\r\n        })\r\n    }\r\n\r\n    removeItem(item) {\r\n        let newContents = this.state.currentOrder.contents.filter(menuItem => {\r\n            return (menuItem.itemName !== item)\r\n        });\r\n        let newItem = this.state.currentOrder.contents.filter(menuItem => { //revisar si filter cambia array original\r\n            return (menuItem.itemName === item)\r\n        })\r\n\r\n        const price = newItem[0].price;\r\n\r\n        newItem[0].quantity = newItem[0].quantity - 1;\r\n\r\n        if (newItem[0].quantity > 0) {\r\n            newContents = newContents.concat(newItem)\r\n        }\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            currentOrder: {\r\n                ...this.state.currentOrder,\r\n                contents: newContents,\r\n                total: this.state.currentOrder.total - price,\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.currentOrder.customer) {\r\n            return (\r\n                <div className=\"container-garzones\">\r\n                    <div className=\"container-opciones-menu\">\r\n                        <input id=\"customer-name\" placeholder=\"Nombre\" value={this.state.inputName} onChange={this.handleChange}></input>\r\n                        <button id=\"add-customer-button\" onClick={this.addCustomer}>AGREGAR CLIENTE</button>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <div className=\"container-garzones\">\r\n                <div className=\"container-opciones-menu\">\r\n                    {this.renderDisplayMenu()}\r\n                    <ReturnButton\r\n                        onClick={this.returnMenu}\r\n                    />\r\n                </div>\r\n                <div className=\"container-current-order\">\r\n                    <CurrentOrder\r\n                        currentOrder={this.state.currentOrder}\r\n                        sendToKitchen={this.sendToKitchen}\r\n                        removeItem={this.removeItem}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Waiters;","import React from 'react';\r\nimport './menuButton.css'\r\n\r\nfunction MenuButton(props) {\r\n    if (props.value === 'GARZONES' && props.waitersOn) {\r\n      return (\r\n        <button key={props.value} className=\"menu-button-selected\" onClick={props.onClick}>{props.value}</button>\r\n      )\r\n    } else if (props.value === 'COCINA' && !props.waitersOn) {\r\n      return (\r\n        <button key={props.value} className=\"menu-button-selected\" onClick={props.onClick}>{props.value}</button>\r\n      )\r\n    } else {\r\n      return (\r\n        <button key={props.value} className=\"menu-button\" onClick={props.onClick}>{props.value}</button>\r\n      )\r\n    }\r\n  }\r\n\r\nexport default MenuButton;","import React from 'react';\r\nimport './kitchen.css';\r\n\r\n\r\nfunction Kitchen(props) {\r\n\r\n        if (!props.kitchenOrders.length === 0) {\r\n            return null\r\n        }\r\n\r\n        const pendingOrders = props.kitchenOrders.map((foodItem, i) => {\r\n            const contents = foodItem.contents.map(item => {\r\n                return (\r\n                    <tr key={item.itemName}>\r\n                        <td className=\"table-col\">{item.quantity}</td>\r\n                        <td className=\"table-col\">{item.itemName}</td>\r\n                    </tr>\r\n                )\r\n            })\r\n            return (\r\n                <table className=\"table-card\" key={foodItem.sentToKitchen}>\r\n                    <tr key={foodItem.sentToKitchen}>\r\n                        <td className=\"table-col index\"><div className=\"order-number\">{i+1}</div></td>\r\n                        <td className=\"table-col kitchen-customer-name\">{foodItem.customer}</td>\r\n                    </tr>\r\n                    {contents}\r\n                </table>\r\n\r\n            )\r\n        })\r\n        return pendingOrders\r\n    \r\n\r\n\r\n    \r\n\r\n}\r\n\r\nexport default Kitchen;","import React, { Component } from 'react';\r\n// import logo from './logo.svg';\r\nimport './App.css';\r\nimport Waiters from './components/waiters';\r\nimport MenuButton from './components/menuButtons';\r\nimport Kitchen from './components/kitchen';\r\nimport logo from './img/output-onlinepngtools.png'\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      orders: [/*{\r\n        customer: null,\r\n        contents: null,\r\n        total: null,\r\n        sentToKitchen: false,\r\n        ready: false,\r\n      }*/],\r\n      waitersOn: true,\r\n      menu:  props.menu,\r\n      pedidosRef: props.pedidosRef,\r\n      kitchenOrders: [],\r\n    }\r\n\r\n    props.pedidosRef.on(\"value\", snap => {\r\n      const orders = [];\r\n      for (let item in snap.val()) {\r\n          orders.push(snap.val()[item])\r\n      }\r\n      this.setState({\r\n          ...this.state,\r\n          kitchenOrders: orders,\r\n      })\r\n  })\r\n\r\n  }\r\n\r\n  handleClick(i) {\r\n    if (i === 'GARZONES') {\r\n      this.setState({\r\n        ...this.state,\r\n        waitersOn: true,\r\n      })\r\n    } else {\r\n      this.setState({\r\n        ...this.state,\r\n        waitersOn: false,\r\n      })\r\n    }\r\n  }\r\n\r\n  renderMenuButton(i) {\r\n    return (\r\n      <MenuButton \r\n        value={i}\r\n        onClick={() => this.handleClick(i)}\r\n        waitersOn={this.state.waitersOn}\r\n      />\r\n    )\r\n  }\r\n\r\n \r\n\r\n\r\n  render() {\r\n    if (this.state.waitersOn){\r\n      return (\r\n        <div>\r\n          <div id=\"logo-container\"><img id=\"logo\" src={logo} alt=\"logo\"></img></div> \r\n        <div className=\"app-container\">\r\n          <div className=\"menu-content\">\r\n            {this.renderMenuButton('GARZONES')}\r\n            {this.renderMenuButton('COCINA')}\r\n          </div>\r\n          <div className=\"app-content\">\r\n            <Waiters\r\n              menu={this.state.menu}\r\n            />\r\n          </div>\r\n        </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n         <div id=\"logo-container\"><img id=\"logo\" src={logo} alt=\"logo\"></img></div> \r\n        <div className=\"app-container\" key=\"waiters\">\r\n          <div className=\"menu-content\">\r\n            {this.renderMenuButton('GARZONES')}\r\n            {this.renderMenuButton('COCINA')}\r\n          </div>\r\n          <div className=\"app-content\" key=\"kitchen\">\r\n            {!this.state.waitersOn && \r\n            <Kitchen\r\n            kitchenOrders={this.state.kitchenOrders}\r\n            />\r\n            }\r\n          </div>\r\n        </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport menu from './menu.json';\r\nimport { pedidosRef } from './components/firebase';\r\n\r\n\r\n\r\n\r\n\r\n    ReactDOM.render(<App menu={menu} pedidosRef={pedidosRef}/>, document.getElementById('root'));\r\n\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/output-onlinepngtools.0966e72a.png\";"],"sourceRoot":""}